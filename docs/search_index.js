var documenterSearchIndex = {"docs":
[{"location":"2.Applications/4.microbiome-modification.ipynb/#Microbiome-Modification","page":"Microbiome Modification","title":"Microbiome Modification","text":"","category":"section"},{"location":"1.Tutorial/1.constructing-graphs-from-reference-sequences.ipynb/#Constructing-Graphs-From-Reference-Sequences","page":"Constructing Graphs From Reference Sequences","title":"Constructing Graphs From Reference Sequences","text":"","category":"section"},{"location":"1.Tutorial/5.filtering-graphs.ipynb/#Filtering-Graphs","page":"Filtering Graphs","title":"Filtering Graphs","text":"","category":"section"},{"location":"3.Discussion/03.optimizing-genome-graphs.ipynb/#Using-graph-genomes-for-genome-optimization","page":"Using graph genomes for genome optimization","title":"Using graph genomes for genome optimization","text":"","category":"section"},{"location":"3.Discussion/03.optimizing-genome-graphs.ipynb/#Introduction","page":"Using graph genomes for genome optimization","title":"Introduction","text":"","category":"section"},{"location":"3.Discussion/03.optimizing-genome-graphs.ipynb/","page":"Using graph genomes for genome optimization","title":"Using graph genomes for genome optimization","text":"Now that we have the ability to sequence as many genomes as the research community can afford to pay for, and that there are so many genomes publicly available online, we are now in a situation where we can learn what regions of genomes contribute to what kind of phenotypic properties by associating measured attributes with the co-occurrence of genetic features even for non-model and unculturable organisms. When building these models initially, there are no causal attributes that can necessarily be attributed because we are simply looking for correlative relationships of phenotypic traits appearing in the presence of or in the absence of specific genetic features. Given the ability to associate genetic features with phenotypic features that may be desirable or undesirable, we are given the opportunity to use graph pan genomes as vehicles for genetic optimization driven entirely by data. These non-causal relationships can be expanded upon over time with additional information that is derived from causal analysis conducted statistically and/or via direct experimentation.","category":"page"},{"location":"3.Discussion/03.optimizing-genome-graphs.ipynb/","page":"Using graph genomes for genome optimization","title":"Using graph genomes for genome optimization","text":"Given a weighted graph structure that enables the attribution of specific expected properties to paths through the graph (genomes, transcriptomes, proteomes), there may be situations in which it may be desirable to modify and manipulate genomes to have them manifest these desirable characteristics in an actual organism. For example, it may be desired to encode features that are most consistent with outcomes such as health and longevity (humans), avirulence/lack of pathogenicity (pathogens/microbes/viruses), as well as having the smallest essential (minimal) genome (biomanufacturing).","category":"page"},{"location":"3.Discussion/03.optimizing-genome-graphs.ipynb/","page":"Using graph genomes for genome optimization","title":"Using graph genomes for genome optimization","text":"Given a pangenomegraph with weights where the weights are proportional to an optimizeable measure such as correlation, likelihood, frequency, etc., the question becomes how do we find the optimal path through this genome graph such that the average score is maximized so that we can test whether the predictive value of the graph can manifest the desired outcomes if the genome was encoded in a living organism.","category":"page"},{"location":"3.Discussion/03.optimizing-genome-graphs.ipynb/","page":"Using graph genomes for genome optimization","title":"Using graph genomes for genome optimization","text":"At the time of writing, the optimization algorithms that I am aware of only operate on the weights of the edges. For example, there are many optimization algorithms that find the shortest path between two nodes. Examples include A-star, djikstra, bellman-Ford, traveling salesman problem (note that traveling salesman problem assumes a cyclic optimization which is very helpful specifically when dealing with circular genomes such as those of phage bacteria or other prokaryotic organisms). Given that we donâ€™t have a plethora of optimization algorithms that account for edge weights and node weights (aside from hidden Markov models which become impractical at very large graph sizes common in pangenomics), we will look at the node optimization and path optimization components of our goal individually. ","category":"page"},{"location":"3.Discussion/03.optimizing-genome-graphs.ipynb/","page":"Using graph genomes for genome optimization","title":"Using graph genomes for genome optimization","text":"We will first ask the question \"which nodes do we want to include?\", which can be done by setting a threshold and only retaining nodes that meet that threshold, clustering (supervised and/or unsupervised), and likely many more methods. Given the set of nodes of interest, we can induce a subgraph containing just those nodes and then find the optimal or a sufficiently optimal path through the subset of remaining nodes that maximizes the overall optimization that we are trying to achieve.","category":"page"},{"location":"3.Discussion/03.optimizing-genome-graphs.ipynb/","page":"Using graph genomes for genome optimization","title":"Using graph genomes for genome optimization","text":"For the problem of trying to find the minimally sized genome, our node optimization is relative frequency of genes contained in all known entities of a given species or other phylogenetic level of classification (threshold = must be contained in 100% of observed entities). In this same problem, the path optimization is the shortest viable path of observed possible paths that includes all of these nodes. Further possible optimization can be done if we are willing to consider connections that have not yet been observed (e.g. gene fusions and assumptions that non-coding elements between genes are themselves non-essential).","category":"page"},{"location":"3.Discussion/03.optimizing-genome-graphs.ipynb/","page":"Using graph genomes for genome optimization","title":"Using graph genomes for genome optimization","text":"To create the structure necessary for this optimization, we will first build a pan genome graph that includes the DNA kmers, gene annotations + amino acid kmers, and the pathways that they encode. We can then look at the relative feature space in all three of these levels. The highest and most abstract level is that of the metabolic pathway (Note, in an ideal world all metabolic pathways would be fully resolved and validated and in such a world this would be very non-abstract, however in practice we are unable to unambiguously resolve and verify all metabolic pathways in all organisms and therefore I will consider it in the abstract sense for the purposes of this explanation). ","category":"page"},{"location":"3.Discussion/03.optimizing-genome-graphs.ipynb/","page":"Using graph genomes for genome optimization","title":"Using graph genomes for genome optimization","text":"[figure here showing pathways and relative frequency of conservation among a group of entities]","category":"page"},{"location":"3.Discussion/03.optimizing-genome-graphs.ipynb/","page":"Using graph genomes for genome optimization","title":"Using graph genomes for genome optimization","text":"At a functional protein level, the goal is not necessarily to consider all possible proteins as unique variants but rather to cluster the proteins into functionally equivalent clades/families, ask which clades/families maximize our intended value (for minimal genome size, frequency in all entitities considered = 100%), and then after the clades have been selected, choose the optimal known variant of that clade that can then be selected in the AA space and further constrained into the DNA space based on codon frequency profiles. ","category":"page"},{"location":"3.Discussion/03.optimizing-genome-graphs.ipynb/","page":"Using graph genomes for genome optimization","title":"Using graph genomes for genome optimization","text":"[insert figure here showing protein families with relative frequencies and amino acid variability that then translates down into DNA space and alternate codon options that can be optimized again]","category":"page"},{"location":"3.Discussion/03.optimizing-genome-graphs.ipynb/","page":"Using graph genomes for genome optimization","title":"Using graph genomes for genome optimization","text":"At the lowest level, we have the DNA itself where our goal is simply to try and maximize the optimization value of choice through all possible DNA pads in the graph until we have either created a completely circular circular rise full genome or we have reached the end of the chromosome all telomeres.","category":"page"},{"location":"3.Discussion/03.optimizing-genome-graphs.ipynb/","page":"Using graph genomes for genome optimization","title":"Using graph genomes for genome optimization","text":"[insert figure here showing the traversal of a graph that either loops into a complete circle or terminates at terminal telomeres]","category":"page"},{"location":"3.Discussion/03.optimizing-genome-graphs.ipynb/","page":"Using graph genomes for genome optimization","title":"Using graph genomes for genome optimization","text":"In all cases the final minimal form must go through a DNA genome (with the exception of RNA-based viruses, which would follow a conceptually equivalent format but would build on a foundation of an RNA pangenome/pantranscriptome). The key advantage of constraining in the pathway and protein layers of abstraction is the dimensionality reduction provided. A genome may contain billions of nucleic acid bases, but is likely to only contain up to thousands of pathways and thousands of genes. These constraints will enable more efficient optimization of incredibly large and complex pangenomes such as those of complex microbiomes (e.g. soil) and large eukaryotic genomes (e.g. humans and many crops).","category":"page"},{"location":"3.Discussion/03.optimizing-genome-graphs.ipynb/","page":"Using graph genomes for genome optimization","title":"Using graph genomes for genome optimization","text":"Given a set of constrained points, which may or may not be equivalent to the set of all possible points depending on what kind of optimization steps were carried out before, we then try and find the optimal path between points in a stepwise (random or greedy) order and ask first \"is there a path between this next node and any of the current nodes in the graph?\" and if so, return that path and add this node to this graph. If not, add this node to the set of nodes in the graph and await connections to the remaining nodes yet to be evaluated.","category":"page"},{"location":"3.Discussion/03.optimizing-genome-graphs.ipynb/","page":"Using graph genomes for genome optimization","title":"Using graph genomes for genome optimization","text":"[insert a figure showing this workflow where we have a full graph, a reduced set of nodes that meet the thresholding criteria, and then iterative making the connections between them]","category":"page"},{"location":"3.Discussion/03.optimizing-genome-graphs.ipynb/","page":"Using graph genomes for genome optimization","title":"Using graph genomes for genome optimization","text":"(personal note, maybe could also use the Bellman-Ford on a given induced subgraph and just iteratively pick out the shortest connections?)","category":"page"},{"location":"3.Discussion/03.optimizing-genome-graphs.ipynb/","page":"Using graph genomes for genome optimization","title":"Using graph genomes for genome optimization","text":"For the genome optimization problem, different sections of the graph will need to be sequestered away and isolated into chromosomes as we reach terminating steps. I think there are several possible terminating steps worth considering. One possible consideration is that we create a fully circularized chromosome. In the event of this happens, this should be an end condition for that chromosomes. When considering linear chromosomes, if we hit a terminal node in the graph in two locations, equivalent to reaching the telomeres biologically, we should sequester this node collection/chromosome off and remove considering additions to this chromosome for all future inclusions to our optimized graph.","category":"page"},{"location":"3.Discussion/03.optimizing-genome-graphs.ipynb/","page":"Using graph genomes for genome optimization","title":"Using graph genomes for genome optimization","text":"When trying to decide if youâ€™re multichromosome all genome is optimally complete I think there should be a sigmoidal binary supervised cluster that or something simpler such as a absolute threshold in whereby either we were able to segregate into two clear populations of optimal and non-optimal or we are able to fit a diminishing returns Vmax V not midpoint where we feel good that we have obtained half of or at least half of the core density of the system and we should let people modify this parameter to their suiting however by default we have it set to the larger of the 2K means clusters.","category":"page"},{"location":"3.Discussion/03.optimizing-genome-graphs.ipynb/#Experiment","page":"Using graph genomes for genome optimization","title":"Experiment","text":"","category":"section"},{"location":"3.Discussion/03.optimizing-genome-graphs.ipynb/","page":"Using graph genomes for genome optimization","title":"Using graph genomes for genome optimization","text":"Create a compressed reference graph","category":"page"},{"location":"3.Discussion/03.optimizing-genome-graphs.ipynb/","page":"Using graph genomes for genome optimization","title":"Using graph genomes for genome optimization","text":"theoretical: 3 pathways, two of which are important 3 proteins per pathway 1 sequence per 3 proteins 3 random sequences of length 100 - 1000 assign random importance weights to pathways","category":"page"},{"location":"3.Discussion/03.optimizing-genome-graphs.ipynb/","page":"Using graph genomes for genome optimization","title":"Using graph genomes for genome optimization","text":"applied, known answer: minimal mycobacterium minimal synthetic yeast chromosome","category":"page"},{"location":"3.Discussion/03.optimizing-genome-graphs.ipynb/","page":"Using graph genomes for genome optimization","title":"Using graph genomes for genome optimization","text":"applied, unknown answer: phage pathways phage vogs the largest genus of bacteriophage (EC tequatrovirus)","category":"page"},{"location":"3.Discussion/03.optimizing-genome-graphs.ipynb/","page":"Using graph genomes for genome optimization","title":"Using graph genomes for genome optimization","text":"initial pass, work at the pathway level then start again, working at only the protein level then start again, working only at the dna level","category":"page"},{"location":"3.Discussion/03.optimizing-genome-graphs.ipynb/#Results","page":"Using graph genomes for genome optimization","title":"Results","text":"","category":"section"},{"location":"3.Discussion/03.optimizing-genome-graphs.ipynb/","page":"Using graph genomes for genome optimization","title":"Using graph genomes for genome optimization","text":"Visualize the graph before and after simplification","category":"page"},{"location":"3.Discussion/03.optimizing-genome-graphs.ipynb/#Conclusions","page":"Using graph genomes for genome optimization","title":"Conclusions","text":"","category":"section"},{"location":"3.Discussion/03.optimizing-genome-graphs.ipynb/","page":"Using graph genomes for genome optimization","title":"Using graph genomes for genome optimization","text":"Assuming a direct, linear relationship between # of genes and cost on potentially wasteful metabolic expenditure, then every gene removal can increase the relative production of remaining metabolites.","category":"page"},{"location":"3.Discussion/03.optimizing-genome-graphs.ipynb/","page":"Using graph genomes for genome optimization","title":"Using graph genomes for genome optimization","text":"While regulatory feedback loops make a direct relationship unlikely, if we operate under this train of thought, then creating minimal genomes should make organisms more efficient and plyable/flexible for bioengineering and minimize the likelihood of the production of any undesirable phenotypes and metabolic outputs if used as biofactories of pharmaceuticals.","category":"page"},{"location":"3.Discussion/01.representating-omes-with-graphs.ipynb/#Representing-(Gen/Transcript/Prote)omes-with-Graphs","page":"Representing (Gen/Transcript/Prote)omes with Graphs","title":"Representing (Gen/Transcript/Prote)omes with Graphs","text":"","category":"section"},{"location":"2.Applications/1.hybrid-metagenomic-assembly.ipynb/#Hybrid-Metagenomic-Assembly","page":"Hybrid Metagenomic Assembly","title":"Hybrid Metagenomic Assembly","text":"","category":"section"},{"location":"3.Discussion/04.graph-simplification.ipynb/#Graph-Simplification","page":"Graph Simplification","title":"Graph Simplification","text":"","category":"section"},{"location":"3.Discussion/04.graph-simplification.ipynb/","page":"Graph Simplification","title":"Graph Simplification","text":"For graph polishing take the smallest K at which you see singletons, and for reeds containing those singletons find a new optimal path through the graph to replace those singletons. In the next iteration increase the K to the next Prime number K less than 64 and again determine all cameras that are singletons and in each read containing those singletons find a new path through the graph that removes those single tenant. After we have reached a K of 63 or after we have stopped making edits we should have a rived at a polished graph where each read has been graph corrected to its optimization maximization no expectation max my expectation maximize ation likelihood where this is a greedy graph-based approach of figuring out which graph is most likely given the input data.","category":"page"},{"location":"3.Discussion/04.graph-simplification.ipynb/","page":"Graph Simplification","title":"Graph Simplification","text":"Explain hear what else we have tried and one thing that weâ€™ve tried is the Viterbi algorithm which is simply too slow given that we have to compute too many combinations are possible paths, however in theory this is the best statistical approach to be taken to robustly solve this problem.","category":"page"},{"location":"3.Discussion/025.representing-omics-graphs-with-metagraphs.ipynb/#Representing-Multiomics-Graphs-with-MetaGraphs","page":"Representing Multiomics Graphs with MetaGraphs","title":"Representing Multiomics Graphs with MetaGraphs","text":"","category":"section"},{"location":"1.Tutorial/2.constructing-graphs-from-observed-sequences.ipynb/#Constructing-Graphs-from-Observed-Sequences","page":"Constructing Graphs from Observed Sequences","title":"Constructing Graphs from Observed Sequences","text":"","category":"section"},{"location":"1.Tutorial/6.annotating-graphs.ipynb/#Annotating-Graphs","page":"Annotating Graphs","title":"Annotating Graphs","text":"","category":"section"},{"location":"3.Discussion/095.classifying-and-clustering-sequences-with-graphs.ipynb/#Classifying-and-Clustering-Sequences-with-Graphs","page":"Classifying and Clustering Sequences with Graphs","title":"Classifying and Clustering Sequences with Graphs","text":"","category":"section"},{"location":"3.Discussion/05.generalized-genome-optimization.ipynb/#Generalized-Genome-Optimization","page":"Generalized Genome Optimization","title":"Generalized Genome Optimization","text":"","category":"section"},{"location":"4.Reference/k-primes-pattern.ipynb/#K-primes-pattern","page":"K primes pattern","title":"K primes pattern","text":"","category":"section"},{"location":"4.Reference/k-primes-pattern.ipynb/","page":"K primes pattern","title":"K primes pattern","text":"I was looking for a way to iterate through prime number k's. I wanted the method that would avoid twin primes. Twin primes are only 2 apart, e.g.: (3, 5), (5, 7), (11, 13), (17, 19), (29, 31), (41, 43), (59, 61), (71, 73), (101, 103), (107, 109). Re-assessing data using such closely related window sizes seems like it would be for minimal gain. With the same principle of trying to avoid reprocessing data for minimal gain, an ideal iteration would steadily increase in distance between the current k-length and the next.","category":"page"},{"location":"4.Reference/k-primes-pattern.ipynb/","page":"K primes pattern","title":"K primes pattern","text":"julia> step = 2\n2\n\njulia> current_prime = 11\n11\n\njulia> while Primes.isprime(current_prime)\n           current_prime = current_prime + step\n           step += 2\n           @show current_prime\n       end\ncurrent_prime = 13\ncurrent_prime = 17\ncurrent_prime = 23\ncurrent_prime = 31\ncurrent_prime = 41\ncurrent_prime = 53\ncurrent_prime = 67\ncurrent_prime = 83\ncurrent_prime = 101\ncurrent_prime = 121","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/#Neo4J-Notes","page":"Neo4J Notes","title":"Neo4J Notes","text":"","category":"section"},{"location":"4.Reference/neo4j-notes.ipynb/#Schema-for-a-pan-meta-genome-graph-with-annotations-(multi-dataset)","page":"Neo4J Notes","title":"Schema for a pan-meta-genome graph with annotations (multi-dataset)","text":"","category":"section"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"(Image: pan-meta-genome-graph-with-annotations)","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"//pan-meta-genome-graph-with-annotations\nCREATE (dnamer:DNAmer {label: \"DNAmer\"})\nCREATE (read:Read {label: \"Read\"})\nCREATE (aamer:AAmer {label: \"AAmer\"})\nCREATE (dataset:Dataset {label: \"Dataset\"})\nCREATE (environment:Environment {label: \"Environment\"})\nCREATE (genome:Genome {label: \"Genome\"})\nCREATE (species:Species {label: \"Species\"})\nCREATE (genus:Genus {label: \"Genus\"})\nCREATE (family:Family {label: \"Family\"})\nCREATE (order:Order {label: \"Order\"})\nCREATE (subclass:Subclass {label: \"Subclass\"})\nCREATE (class:Class {label: \"Class\"})\nCREATE (subphylum:Subphylum {label: \"Subphylum\"})\nCREATE (phylum:Phylum {label: \"Phylum\"})\nCREATE (subkingdom:Subkingdom {label: \"Subkingdom\"})\nCREATE (kingdom:Kingdom {label: \"Kingdom\"})\nCREATE (clade:Clade {label: \"Clade\"})\nCREATE (superkingdom:Superkingdom {label: \"Superkingdom\"})\nCREATE (root:Root {label: \"Root\"})\nCREATE (annotation:Annotation {label: \"Annotation\"})\nCREATE (entity:Entity {label: \"Entity\"})\nCREATE (pathway:Pathway {label: \"Pathway\"})\nCREATE (toxin:Toxin {label:\"Toxin\"})\nCREATE (virulencefactor:VirulenceFactor {label: \"VirulenceFactor\"})\nCREATE (antibioticresistance:AntibioticResistance {label: \"AntibioticResistance\"})\nCREATE (integrase:Integrase {label: \"Integrase\"})\nCREATE (host:Entity {label: \"Host\"})\n\nCREATE (entity)-[entity_host:HOST_OF]->(host)\nCREATE (annotation)-[annotation_integrase:ISA]->(integrase)\nCREATE (annotation)-[annotation_antibioticresistance:CONFERS]->(antibioticresistance)\nCREATE (annotation)-[annotation_virulencefator:ISA]->(virulencefactor)\nCREATE (annotation)-[annotation_toxin:ISA]->(toxin)\nCREATE (host)-[host_species:ISA]->(species)\nCREATE (host)-[host_genome:GENOME_OF]->(genome)\nCREATE (dnamer)-[dnamer_annotation:CONTAINED_IN]->(annotation)\nCREATE (aamer)-[aamer_annotation:CONTAINED_IN]->(annotation)\nCREATE (genome)-[genome_annotation:CONTAINED_IN]->(annotation)\nCREATE (superkingdom)-[superkingdom_root:PARENT]->(root)\nCREATE (clade)-[clade_superkingdom:PARENT]->(superkingdom)\nCREATE (kingdom)-[kingdom_clade:PARENT]->(clade)\nCREATE (subkingdom)-[subkingdom_kingdom:PARENT]->(kingdom)\nCREATE (phylum)-[phylum_subkingdom:PARENT]->(subkingdom)\nCREATE (subphylum)-[subphylum_phylum:PARENT]->(phylum)\nCREATE (class)-[class_subphylum:PARENT]->(subphylum)\nCREATE (subclass)-[subclass_class:PARENT]->(class)\nCREATE (order)-[order_subclass:PARENT]->(subclass)\nCREATE (family)-[family_order:PARENT]->(order)\nCREATE (genus)-[genus_family:PARENT]->(family)\nCREATE (species)-[species_genus:PARENT]->(genus)\nCREATE (entity)-[entity_species:ISA]->(species)\nCREATE (dnamer)-[dnamer_genome:CONTAINED_IN]->(genome)\nCREATE (dataset)-[dataset_environment:SOURCED_FROM]->(environment)\nCREATE (read)-[read_dataset:CONTAINED_IN]->(dataset)\nCREATE (aamer)-[aamer_read:CONTAINED_IN]->(read)\nCREATE (dnamer)-[dnamer_read:CONTAINED_IN]->(read)\nCREATE (dnamer)-[dnamer_aamer:TRANSLATES_TO]->(aamer)\nCREATE (aamer)-[aamer_genome:CONTAINED_IN]->(genome)\nCREATE (genome)-[genome_entity:GENOME_OF]->(entity)\nCREATE (annotation)-[annotation_pathway:CONTAINED_IN]->(pathway)\n\n\nRETURN dnamer,\nread,\naamer,\ndataset,\nenvironment,\ngenome,\nspecies,\ngenus,\nfamily,\norder,\nsubclass,\nclass,\nsubphylum,\nphylum,\nsubkingdom,\nkingdom,\nclade,\nsuperkingdom,\nroot,\nannotation,\nentity,\npathway,\nannotation_pathway,\ntoxin,\nvirulencefactor,\nantibioticresistance,\nintegrase,\nhost,\nentity_host,\nannotation_integrase,\nannotation_antibioticresistance,\nannotation_virulencefator,\nannotation_toxin,\nhost_species,\nhost_genome\n","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/#Schema-for-a-pan-meta-genome-graph-(multi-dataset)","page":"Neo4J Notes","title":"Schema for a pan-meta-genome graph (multi-dataset)","text":"","category":"section"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"(Image: pan-meta-genome-graph)","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"//pan-meta-genome-graph\nCREATE (dnamer:DNAmer {label: \"DNAmer\"})\nCREATE (read:Read {label: \"Read\"})\nCREATE (aamer:AAmer {label: \"AAmer\"})\nCREATE (dataset:Dataset {label: \"Dataset\"})\nCREATE (environment:Environment {label: \"Environment\"})\nCREATE (genome:Genome {label: \"Genome\"})\nCREATE (species:Species {label: \"Species\"})\nCREATE (genus:Genus {label: \"Genus\"})\nCREATE (family:Family {label: \"Family\"})\nCREATE (order:Order {label: \"Order\"})\nCREATE (subclass:Subclass {label: \"Subclass\"})\nCREATE (class:Class {label: \"Class\"})\nCREATE (subphylum:Subphylum {label: \"Subphylum\"})\nCREATE (phylum:Phylum {label: \"Phylum\"})\nCREATE (subkingdom:Subkingdom {label: \"Subkingdom\"})\nCREATE (kingdom:Kingdom {label: \"Kingdom\"})\nCREATE (clade:Clade {label: \"Clade\"})\nCREATE (superkingdom:Superkingdom {label: \"Superkingdom\"})\nCREATE (root:Root {label: \"Root\"})\nCREATE (annotation:Annotation {label: \"Annotation\"})\nCREATE (entity:Entity {label: \"Entity\"})\nCREATE (pathway:Pathway {label: \"Pathway\"})\n\nCREATE (dnamer)-[dnamer_annotation:CONTAINED_IN]->(annotation)\nCREATE (aamer)-[aamer_annotation:CONTAINED_IN]->(annotation)\nCREATE (genome)-[genome_annotation:CONTAINED_IN]->(annotation)\nCREATE (superkingdom)-[superkingdom_root:PARENT]->(root)\nCREATE (clade)-[clade_superkingdom:PARENT]->(superkingdom)\nCREATE (kingdom)-[kingdom_clade:PARENT]->(clade)\nCREATE (subkingdom)-[subkingdom_kingdom:PARENT]->(kingdom)\nCREATE (phylum)-[phylum_subkingdom:PARENT]->(subkingdom)\nCREATE (subphylum)-[subphylum_phylum:PARENT]->(phylum)\nCREATE (class)-[class_subphylum:PARENT]->(subphylum)\nCREATE (subclass)-[subclass_class:PARENT]->(class)\nCREATE (order)-[order_subclass:PARENT]->(subclass)\nCREATE (family)-[family_order:PARENT]->(order)\nCREATE (genus)-[genus_family:PARENT]->(family)\nCREATE (species)-[species_genus:PARENT]->(genus)\nCREATE (entity)-[entity_species:ISA]->(species)\nCREATE (dnamer)-[dnamer_genome:CONTAINED_IN]->(genome)\nCREATE (dataset)-[dataset_environment:SOURCED_FROM]->(environment)\nCREATE (read)-[read_dataset:CONTAINED_IN]->(dataset)\nCREATE (aamer)-[aamer_read:CONTAINED_IN]->(read)\nCREATE (dnamer)-[dnamer_read:CONTAINED_IN]->(read)\nCREATE (dnamer)-[dnamer_aamer:TRANSLATES_TO]->(aamer)\nCREATE (aamer)-[aamer_genome:CONTAINED_IN]->(genome)\nCREATE (genome)-[genome_entity:GENOME_OF]->(entity)\nCREATE (annotation)-[annotation_pathway:CONTAINED_IN]->(pathway)\n\n\nRETURN dnamer,\nread,\naamer,\ndataset,\nenvironment,\ngenome,\nspecies,\ngenus,\nfamily,\norder,\nsubclass,\nclass,\nsubphylum,\nphylum,\nsubkingdom,\nkingdom,\nclade,\nsuperkingdom,\nroot,\nannotation,\nentity,\npathway,\nannotation_pathway","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/#Schema-for-a-metagenome-graph-(single-dataset)","page":"Neo4J Notes","title":"Schema for a metagenome graph (single dataset)","text":"","category":"section"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"(Image: meta-genome-graph)","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"//meta-genome-graph\nCREATE (dnamer:DNAmer {label: \"DNAmer\"})\nCREATE (aamer:AAmer {label: \"AAmer\"})\nCREATE (read:Read {label: \"Read\"})\nCREATE (genome:Genome {label: \"Genome\"})\nCREATE (annotation:Annotation {label: \"Annotation\"})\nCREATE (pathway:Pathway {label: \"Pathway\"})\n\nCREATE (dnamer)-[dnamer_annotation:CONTAINED_IN]->(annotation)\nCREATE (aamer)-[aamer_annotation:CONTAINED_IN]->(annotation)\nCREATE (genome)-[genome_annotation:CONTAINED_IN]->(annotation)\nCREATE (annotation)-[annotation_pathway:CONTAINED_IN]->(pathway)\nCREATE (dnamer)-[dnamer_genome:CONTAINED_IN]->(genome)\nCREATE (aamer)-[aamer_read:CONTAINED_IN]->(read)\nCREATE (dnamer)-[dnamer_read:CONTAINED_IN]->(read)\nCREATE (dnamer)-[dnamer_aamer:TRANSLATES_TO]->(aamer)\nCREATE (aamer)-[aamer_genome:CONTAINED_IN]->(genome)\n\nRETURN dnamer,\nread,\naamer,\ngenome,\nannotation,\npathway,\nannotation_pathway","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/#Example-Queries","page":"Neo4J Notes","title":"Example Queries","text":"","category":"section"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"English","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"CYPHER","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"Give me the genome of entity x\nGive me the pangenome of species x\nGive me the pangenome of order x\nGive me all kmers in species x\nFinding spacers:\nGive me all kmers in species x matching pattern y\nGive me all datasets containing species x\nGive me all datasets containing pathway x\nGive me all reads supporting path/variant x","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/#Creating-a-blank-database","page":"Neo4J Notes","title":"Creating a blank database","text":"","category":"section"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"https://neo4j.com/developer/neo4j-desktop/#desktop-create-project","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/#Interacting-with-a-Database","page":"Neo4J Notes","title":"Interacting with a Database","text":"","category":"section"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"username: neo4j\npassword: password\nI set this and yours may be different!","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"https://neo4j.com/developer/manage-multiple-databases/","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"https://stackoverflow.com/a/29658062 https://neo4j.com/docs/operations-manual/current/tools/cypher-shell/#cypher-shell-syntax https://contentaudience.com/guides/neo4j-cli-cypher-shell/ https://neo4j.com/developer/kb/how-do-i-authenticate-with-cypher-shell-without-specifying-the-username-and-password-on-the-command-line/","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"Bulk import","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/#Database","page":"Neo4J Notes","title":"Database","text":"","category":"section"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"Basic Alphabets\nCanonical Nucleic Acids\nCanonical Amino Acids\nTypes of paths\nDNAmers\nDNAmers are canonical dna sequences of k-length\nwe track all odd primes between 1 and 31 for DNA mers\nwe track DNAmers 3, 9, 15, and 21 for interoperability between AAmers and the DNAmers they translate from\nkmers store both their full sequences AND their sequences as paths through shorter kmers\nAAmers\nwe track all odd primes between 1 and 5 for AA mers\nkmers store both their full sequences AND their sequences as paths through shorter kmers\nGenomes\ngenomes are paths through DNA kmers\nannotations\nannotations are paths through DNA kmers and possibly also through AA kmers","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/#Learning-to-use-Cyper-CLI","page":"Neo4J Notes","title":"Learning to use Cyper CLI","text":"","category":"section"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"usage: cypher-shell [-h] [-a ADDRESS] [-u USERNAME] [-p PASSWORD] [--encryption {true,false,default}] [-d DATABASE]\n                    [--format {auto,verbose,plain}] [-P PARAM] [--debug] [--non-interactive] [--sample-rows SAMPLE-ROWS]\n                    [--wrap {true,false}] [-v] [--driver-version] [-f FILE] [--fail-fast | --fail-at-end] [cypher]\n\nA command line shell where you can execute Cypher against an  instance  of  Neo4j.  By default the shell is interactive but you can use it\nfor scripting by passing cypher directly on the command line or by piping a file with cypher statements (requires Powershell on Windows).\n\nexample of piping a file:\n  cat some-cypher.txt | cypher-shell\n\npositional arguments:\n  cypher                 an optional string of cypher to execute and then exit\n\noptional arguments:\n  -h, --help             show this help message and exit\n  --fail-fast            exit and report failure on first error when reading from file (this is the default behavior)\n  --fail-at-end          exit and report failures at end of input when reading from file\n  --format {auto,verbose,plain}\n                         desired output format, verbose displays results  in  tabular  format  and  prints statistics, plain displays data\n                         with minimal formatting (default: auto)\n  -P PARAM, --param PARAM\n                         Add a parameter to this session. Example: `-P \"number => 3\"`. This argument can be specified multiple times.\n  --debug                print additional debug information (default: false)\n  --non-interactive      force non-interactive mode, only useful if auto-detection fails (like on Windows) (default: false)\n  --sample-rows SAMPLE-ROWS\n                         number of rows sampled to compute table widths (only for format=VERBOSE) (default: 1000)\n  --wrap {true,false}    wrap table column values if column is too narrow (only for format=VERBOSE) (default: true)\n  -v, --version          print version of cypher-shell and exit (default: false)\n  --driver-version       print version of the Neo4j Driver used and exit (default: false)\n  -f FILE, --file FILE   Pass a file with cypher statements to be executed.  After  the statements have been executed cypher-shell will be\n                         shutdown\n\nconnection arguments:\n  -a ADDRESS, --address ADDRESS\n                         address and port to connect to (default: neo4j://localhost:7687)\n  -u USERNAME, --username USERNAME\n                         username to connect as. Can also be specified using environment variable NEO4J_USERNAME (default: )\n  -p PASSWORD, --password PASSWORD\n                         password to connect with. Can also be specified using environment variable NEO4J_PASSWORD (default: )\n  --encryption {true,false,default}\n                         whether the connection to Neo4j should  be  encrypted.  This  must  be  consistent with Neo4j's configuration. If\n                         choosing 'default' the encryption setting is  deduced  from  the  specified  address. For example the 'neo4j+ssc'\n                         protocol would use encryption. (default: default)\n  -d DATABASE, --database DATABASE\n                         database to connect to. Can also be specified using environment variable NEO4J_DATABASE (default: )","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"List databases","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"# verbose outputs mdtable with pretty printing\ncypher-shell --address neo4j://localhost:7687 --username neo4j --password password --database system --format verbose 'show databases'\n# plain outputs a CSV\ncypher-shell --address neo4j://localhost:7687 --username neo4j --password password --database system --format plain 'show databases'\n# auto uses verbose\ncypher-shell --address neo4j://localhost:7687 --username neo4j --password password --database system --format auto 'show databases'","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"Creating a database for a specific dataset","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"cypher-shell --address neo4j://localhost:7687 --username neo4j --password password --database system --format auto 'create database test'","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"Show schema","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"cypher-shell --address neo4j://localhost:7687 --username neo4j --password password --database test --format auto 'CALL db.schema.visualization()'","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"Return all nodes","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"cypher-shell --address neo4j://localhost:7687 --username neo4j --password password --database test --format auto 'MATCH (n) RETURN n'","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"Delete entire graph","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"cypher-shell --address neo4j://localhost:7687 --username neo4j --password password --database test --format auto 'MATCH (n) DETACH DELETE n'","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"Add kmers and connections in one go","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"cypher-shell --address neo4j://localhost:7687 --username neo4j --password password --database test --format auto 'MERGE (d1:DNAmer {sequence: \"A\"})-[d1d2:CONNECTION {orientations: [1,1]}]->(d2:DNAmer {sequence: \"T\"}) RETURN *'","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"Add kmers and connections in separate steps","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"cypher-shell --address neo4j://localhost:7687 --username neo4j --password password --database test --format auto 'MERGE (:DNAmer {sequence: \"A\"})'\ncypher-shell --address neo4j://localhost:7687 --username neo4j --password password --database test --format auto 'MERGE (:DNAmer {sequence: \"T\"})'\ncypher-shell --address neo4j://localhost:7687 --username neo4j --password password --database test --format auto 'MERGE (d1:DNAmer {sequence: \"A\"})-[d1d2:CONNECTION {orientations: [1,1]}]->(d2:DNAmer {sequence: \"T\"}) RETURN *'","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"Find the import folder on ","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"# https://neo4j.com/docs/operations-manual/current/configuration/file-locations/\n/Users/cameronprybol/Library/Application Support/Neo4j Desktop/Application/relate-data/dbmss/dbms-8ab8baac-5dea-4137-bb24-e0b426447940/import","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"find all nmers","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"cypher-shell --address neo4j://localhost:7687 --username neo4j --password password --database test --format auto 'MATCH (d:DNAmer) WHERE size(d.sequence) = 1 return d'","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"create import uniqueness constraints","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"CREATE CONSTRAINT ON (d:Dnamer) ASSERT d.sequence IS UNIQUE;\nCREATE CONSTRAINT ON (f:Fasta) ASSERT f.identifier IS UNIQUE;\nCREATE CONSTRAINT ON (f:Fastq) ASSERT f.identifier IS UNIQUE;","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"data import","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"USING PERIODIC COMMIT\nLOAD CSV WITH HEADERS FROM\n'file:///path/to/file' AS line\nwith line\n\nCREATE (n:Node {id: line.`id`})","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"data conversions for loading CSV","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"TOINT\nTOFLOAT\nhttps://neo4j.com/docs/cypher-manual/current/functions/","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"merge nodes to avoid creating again","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"!important!","category":"page"},{"location":"4.Reference/neo4j-notes.ipynb/","page":"Neo4J Notes","title":"Neo4J Notes","text":"When merging new information into nodes, need to first match on unique key to get all existing fields. Merging matches on all fields, and merging on partial matches will duplicate nodes which we don't want","category":"page"},{"location":"2.Applications/2.minimal-bacterial-genome.ipynb/#Minimal-Bacterial-Genome","page":"Minimal Bacterial Genome","title":"Minimal Bacterial Genome","text":"","category":"section"},{"location":"4.Reference/docstrings.ipynb/","page":"Docstrings","title":"Docstrings","text":"CurrentModule = Mycelia","category":"page"},{"location":"4.Reference/docstrings.ipynb/#Docstrings","page":"Docstrings","title":"Docstrings","text":"","category":"section"},{"location":"4.Reference/docstrings.ipynb/","page":"Docstrings","title":"Docstrings","text":"","category":"page"},{"location":"4.Reference/docstrings.ipynb/","page":"Docstrings","title":"Docstrings","text":"Modules = [Mycelia]","category":"page"},{"location":"4.Reference/docstrings.ipynb/#Mycelia.assess_alignment-Tuple{Any, Any}","page":"Docstrings","title":"Mycelia.assess_alignment","text":"assess_alignment(a, b) -> NamedTuple{(:total_matches, :total_edits), Tuple{Int64, Int64}}\n\n\nA short description of the function\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"4.Reference/docstrings.ipynb/#Mycelia.assess_alignment_accuracy-Tuple{Any}","page":"Docstrings","title":"Mycelia.assess_alignment_accuracy","text":"assess_alignment_accuracy(alignment_result) -> Any\n\n\nReturn proportion of matched bases in alignment to total matches + edits.\n\n0-1, not %\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"4.Reference/docstrings.ipynb/#Mycelia.assess_optimal_alignment-Tuple{Any, Any}","page":"Docstrings","title":"Mycelia.assess_optimal_alignment","text":"assess_optimal_alignment(kmer, observed_kmer) -> Tuple{NamedTuple{(:total_matches, :total_edits), Tuple{Int64, Int64}}, Union{Missing, Bool}}\n\n\nUsed to determine which orientation provides an optimal alignment for initiating path likelihood analyses in viterbi analysis\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"4.Reference/docstrings.ipynb/#Mycelia.count_canonical_kmers-Union{Tuple{KMER_TYPE}, Tuple{Type{KMER_TYPE}, BioSequences.LongSequence}} where KMER_TYPE","page":"Docstrings","title":"Mycelia.count_canonical_kmers","text":"count_canonical_kmers(_::Type{KMER_TYPE}, sequence::BioSequences.LongSequence) -> OrderedCollections.OrderedDict{_A, Int64} where _A\n\n\nA short description of the function\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"4.Reference/docstrings.ipynb/#Mycelia.count_kmers-Union{Tuple{KMER_TYPE}, Tuple{Type{KMER_TYPE}, BioSequences.LongSequence}} where KMER_TYPE","page":"Docstrings","title":"Mycelia.count_kmers","text":"A short description of the function\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"4.Reference/docstrings.ipynb/#Mycelia.determine_edge_probabilities-Tuple{Any, Any}","page":"Docstrings","title":"Mycelia.determine_edge_probabilities","text":"determine_edge_probabilities(graph, strand) -> Union{SparseArrays.SparseMatrixCSC{Float64, Int64}, SparseArrays.SparseVector{_A, Int64} where _A}\n\n\nA short description of the function\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"4.Reference/docstrings.ipynb/#Mycelia.determine_edge_probabilities-Tuple{Any}","page":"Docstrings","title":"Mycelia.determine_edge_probabilities","text":"determine_edge_probabilities(graph) -> Tuple{Union{SparseArrays.SparseMatrixCSC{Float64, Int64}, SparseArrays.SparseVector{_A, Int64} where _A}, Union{SparseArrays.SparseMatrixCSC{Float64, Int64}, SparseArrays.SparseVector{_A, Int64} where _A}}\n\n\nA short description of the function\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"4.Reference/docstrings.ipynb/#Mycelia.find_downstream_vertices-Tuple{Any, Any, Any}","page":"Docstrings","title":"Mycelia.find_downstream_vertices","text":"find_downstream_vertices(kmer_graph, vertex, orientation) -> Set{Int64}\n\n\nGet dna (db = \"nuccore\") or protein (db = \"protein\") sequences from NCBI or get fasta directly from FTP site\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"4.Reference/docstrings.ipynb/#Mycelia.find_unbranched_neighbors-Tuple{Any, Any, Any}","page":"Docstrings","title":"Mycelia.find_unbranched_neighbors","text":"find_unbranched_neighbors(kmer_graph, vertex, orientation) -> Union{Set{Int64}, Vector{Int64}}\n\n\nGet dna (db = \"nuccore\") or protein (db = \"protein\") sequences from NCBI or get fasta directly from FTP site\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"4.Reference/docstrings.ipynb/#Mycelia.get_gff-Tuple{}","page":"Docstrings","title":"Mycelia.get_gff","text":"get_gff(; db, accession, ftp) -> Union{Nothing, GFF3.Reader}\n\n\nGet dna (db = \"nuccore\") or protein (db = \"protein\") sequences from NCBI or get fasta directly from FTP site\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"4.Reference/docstrings.ipynb/#Mycelia.get_kmer_index-Tuple{Any, Any}","page":"Docstrings","title":"Mycelia.get_kmer_index","text":"get_kmer_index(kmers, kmer) -> Any\n\n\nA short description of the function\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"4.Reference/docstrings.ipynb/#Mycelia.get_sequence-Tuple{}","page":"Docstrings","title":"Mycelia.get_sequence","text":"get_sequence(; db, accession, ftp) -> Union{Nothing, FASTX.FASTA.Reader}\n\n\nGet dna (db = \"nuccore\") or protein (db = \"protein\") sequences from NCBI or get fasta directly from FTP site\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"4.Reference/docstrings.ipynb/#Mycelia.is_equivalent-Tuple{Any, Any}","page":"Docstrings","title":"Mycelia.is_equivalent","text":"is_equivalent(a, b) -> Any\n\n\nA short description of the function\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"4.Reference/docstrings.ipynb/#Mycelia.observe-Tuple{R} where R<:Union{FASTX.FASTA.Record, FASTX.FASTQ.Record}","page":"Docstrings","title":"Mycelia.observe","text":"observe(record::Union{FASTX.FASTA.Record, FASTX.FASTQ.Record}; error_rate) -> FASTX.FASTQ.Record\n\n\nA short description of the function\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"4.Reference/docstrings.ipynb/#Mycelia.observe-Union{Tuple{BioSequences.LongSequence{T}}, Tuple{T}} where T","page":"Docstrings","title":"Mycelia.observe","text":"observe(sequence::BioSequences.LongSequence{T}; error_rate) -> BioSequences.LongSequence\n\n\nA short description of the function\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"4.Reference/docstrings.ipynb/#Mycelia.open_fastx-Tuple{String}","page":"Docstrings","title":"Mycelia.open_fastx","text":"open_fastx(path::String) -> Any\n\n\nA short description of the function\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"4.Reference/docstrings.ipynb/#Mycelia.open_gff-Tuple{String}","page":"Docstrings","title":"Mycelia.open_gff","text":"open_gff(path::String) -> GFF3.Reader\n\n\nA short description of the function\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"4.Reference/docstrings.ipynb/#Mycelia.oriented_unbranching_walk-Tuple{Any, Any, Any}","page":"Docstrings","title":"Mycelia.oriented_unbranching_walk","text":"oriented_unbranching_walk(kmer_graph, vertex, orientation) -> Vector{Any}\n\n\nGet dna (db = \"nuccore\") or protein (db = \"protein\") sequences from NCBI or get fasta directly from FTP site\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"4.Reference/docstrings.ipynb/#Mycelia.plot_kmer_frequency_spectra-Tuple{Any}","page":"Docstrings","title":"Mycelia.plot_kmer_frequency_spectra","text":"plot_kmer_frequency_spectra(counts; log_scale, kwargs...) -> Plots.Plot\n\n\nA short description of the function\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"4.Reference/docstrings.ipynb/#Mycelia.set_metadata!-Union{Tuple{E}, Tuple{Any, E, Any, Any}} where E<:Graphs.SimpleGraphs.SimpleEdge","page":"Docstrings","title":"Mycelia.set_metadata!","text":"set_metadata!(kmer_graph, edge::Graphs.SimpleGraphs.SimpleEdge, key, value) -> Bool\n\n\nA short description of the function\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"4.Reference/docstrings.ipynb/#Mycelia.set_metadata!-Union{Tuple{V}, Tuple{Any, V, Any, Any}} where V<:Integer","page":"Docstrings","title":"Mycelia.set_metadata!","text":"set_metadata!(kmer_graph, vertex::Integer, key, value) -> Bool\n\n\nA short description of the function\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"4.Reference/development-notes.ipynb/#Development-Notes","page":"Development Notes","title":"Development Notes","text":"","category":"section"},{"location":"4.Reference/development-notes.ipynb/#API","page":"Development Notes","title":"API","text":"","category":"section"},{"location":"4.Reference/development-notes.ipynb/","page":"Development Notes","title":"Development Notes","text":"Need to allow users to add individual datasets to database\ndoes a sequence exist?\ndoes a sequence exist allowing n mismatches\nrelative likelihood and frequency of most similar paths\nthis is just the viterbi traversal\nreads supporting traversal, and the datasets they came from\nconnected components (species) containing path\nphylogenetic hierarchy of a component\nnodes <-> kmers\nwhich datasets are a given kmer present in?\nexport and import with GFA\ncondense kmer graphs to simplified graphs\nvisualization \nwith Bandage (works automatically with GFA)\nwith Neo4J visualization library","category":"page"},{"location":"4.Reference/development-notes.ipynb/#Implementation-requirements","page":"Development Notes","title":"Implementation requirements","text":"","category":"section"},{"location":"4.Reference/development-notes.ipynb/","page":"Development Notes","title":"Development Notes","text":"kmer spectra -> signal detection\nkmer size with signal -> initial assembly graph\nbandage visualization\ninitial assembly graph + reads -> iterative assembly\nbandage visualization\nfinal assembly\nbandage visualization\nannotation\nfind all start codons\nfind all stop codons\nreport in fasta format all coding regions\ntry and verify against prodigal to make sure that we arenâ€™t missing any\ngraph -> path -> sequence -> amino acid sequence","category":"page"},{"location":"4.Reference/development-notes.ipynb/#Creating-probabilistic-assemblies","page":"Development Notes","title":"Creating probabilistic assemblies","text":"","category":"section"},{"location":"4.Reference/development-notes.ipynb/","page":"Development Notes","title":"Development Notes","text":"Build weighted de-bruijn graphs with observed data\nUse the weighted de-bruijn graph as a hidden markov model to error correct observations\nUse the error-corrected observations to build a new, more accurate weighted de-bruijn graph\nRepeat 1-3 until convergence\nReturn maximum likelihood assembly","category":"page"},{"location":"4.Reference/development-notes.ipynb/","page":"Development Notes","title":"Development Notes","text":"Consider for graph cleaning:","category":"page"},{"location":"4.Reference/development-notes.ipynb/","page":"Development Notes","title":"Development Notes","text":"[x] Solve most likely path (slow but robust) vs\n[ ] resample most likely paths (fast, less theoretically sound)\nfairly certain that this is what the Flye assembler does","category":"page"},{"location":"2.Applications/3.minimal-yeast-chromosome.ipynb/#Minimal-Yeast-Chromosome","page":"Minimal Yeast Chromosome","title":"Minimal Yeast Chromosome","text":"","category":"section"},{"location":"2.Applications/15.finding-consensus-sequences.ipynb/#Finding-Consensus-Sequences","page":"Finding Consensus Sequences","title":"Finding Consensus Sequences","text":"","category":"section"},{"location":"3.Discussion/005.representing-sequence-with-kmers.ipynb/#Representing-Sequences-with-Kmers","page":"Representing Sequences with Kmers","title":"Representing Sequences with Kmers","text":"","category":"section"},{"location":"1.Tutorial/3.merging-graphs.ipynb/#Merging-Graphs","page":"Merging Graphs","title":"Merging Graphs","text":"","category":"section"},{"location":"3.Discussion/00.limitations-of-linear-reference-omes.ipynb/#Limitations-of-Linear-Reference-(Gen/Transcript/Prote)omes","page":"Limitations of Linear Reference (Gen/Transcript/Prote)omes","title":"Limitations of Linear Reference (Gen/Transcript/Prote)omes","text":"","category":"section"},{"location":"3.Discussion/09.optimizing-microbiomes.ipynb/#Optimizing-Microbiomes","page":"Optimizing Microbiomes","title":"Optimizing Microbiomes","text":"","category":"section"},{"location":"#Mycelia","page":"Home","title":"Mycelia","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Biological knowledge graphs for \"omics\" powered by JuliaGraphs, BioJulia, and Neo4J. The goal of the project is to enable performing pan-genomic optimizations by finding traversals through genome graphs with weighted metadata features.","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: Dev) (Image: Build Status) (Image: Coverage) (Image: ColPrac: Contributor's Guide on Collaborative Practices for Community Packages)","category":"page"},{"location":"#Install","page":"Home","title":"Install","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"pkg> add git@github.com:cjprybol/Mycelia.git","category":"page"},{"location":"#Related-Software","page":"Home","title":"Related Software","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"PanTools (paper)\nBioJulia/GenomeGraphs.jl\nPangenome Graphs Review\nRoary\nvg\nPPanGGOLiN","category":"page"},{"location":"3.Discussion/045.minimal-essential-genome.ipynb/#Minimal-Essential-Genome","page":"Minimal Essential Genome","title":"Minimal Essential Genome","text":"","category":"section"}]
}
