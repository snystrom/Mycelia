var documenterSearchIndex = {"docs":
[{"location":"chapter1/#Chapter-1","page":"Chapter 1","title":"Chapter 1","text":"","category":"section"},{"location":"chapter2/#Chapter-2","page":"Chapter 2","title":"Chapter 2","text":"","category":"section"},{"location":"page1/#Page-1","page":"Page 1","title":"Page 1","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = Mycelia","category":"page"},{"location":"#Mycelia","page":"Home","title":"Mycelia","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [Mycelia]","category":"page"},{"location":"#Mycelia.assess_alignment-Tuple{Any, Any}","page":"Home","title":"Mycelia.assess_alignment","text":"assess_alignment(a, b) -> NamedTuple{(:total_matches, :total_edits), Tuple{Int64, Int64}}\n\n\nA short description of the function\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"#Mycelia.assess_alignment_accuracy-Tuple{Any}","page":"Home","title":"Mycelia.assess_alignment_accuracy","text":"assess_alignment_accuracy(alignment_result) -> Any\n\n\nReturn proportion of matched bases in alignment to total matches + edits.\n\n0-1, not %\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"#Mycelia.assess_optimal_alignment-Tuple{Any, Any}","page":"Home","title":"Mycelia.assess_optimal_alignment","text":"assess_optimal_alignment(kmer, observed_kmer) -> Tuple{NamedTuple{(:total_matches, :total_edits), Tuple{Int64, Int64}}, Union{Missing, Bool}}\n\n\nUsed to determine which orientation provides an optimal alignment for initiating path likelihood analyses in viterbi analysis\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"#Mycelia.count_canonical_kmers-Union{Tuple{KMER_TYPE}, Tuple{Type{KMER_TYPE}, BioSequences.LongSequence}} where KMER_TYPE","page":"Home","title":"Mycelia.count_canonical_kmers","text":"A short description of the function\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"#Mycelia.count_kmers-Union{Tuple{KMER_TYPE}, Tuple{Type{KMER_TYPE}, BioSequences.LongSequence}} where KMER_TYPE","page":"Home","title":"Mycelia.count_kmers","text":"count_kmers(_::Type{KMER_TYPE}, sequence::BioSequences.LongSequence) -> OrderedCollections.OrderedDict{_A, Int64} where _A\n\n\nA short description of the function\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"#Mycelia.determine_edge_probabilities-Tuple{Any, Any}","page":"Home","title":"Mycelia.determine_edge_probabilities","text":"determine_edge_probabilities(graph, strand) -> Union{SparseArrays.SparseMatrixCSC{Float64, Int64}, SparseArrays.SparseVector{_A, Int64} where _A}\n\n\nA short description of the function\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"#Mycelia.determine_edge_probabilities-Tuple{Any}","page":"Home","title":"Mycelia.determine_edge_probabilities","text":"determine_edge_probabilities(graph) -> Tuple{Union{SparseArrays.SparseMatrixCSC{Float64, Int64}, SparseArrays.SparseVector{_A, Int64} where _A}, Union{SparseArrays.SparseMatrixCSC{Float64, Int64}, SparseArrays.SparseVector{_A, Int64} where _A}}\n\n\nA short description of the function\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"#Mycelia.find_downstream_vertices-Tuple{Any, Any, Any}","page":"Home","title":"Mycelia.find_downstream_vertices","text":"find_downstream_vertices(kmer_graph, vertex, orientation) -> Set{Int64}\n\n\nGet dna (db = \"nuccore\") or protein (db = \"protein\") sequences from NCBI or get fasta directly from FTP site\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"#Mycelia.find_unbranched_neighbors-Tuple{Any, Any, Any}","page":"Home","title":"Mycelia.find_unbranched_neighbors","text":"find_unbranched_neighbors(kmer_graph, vertex, orientation) -> Union{Set{Int64}, Vector{Int64}}\n\n\nGet dna (db = \"nuccore\") or protein (db = \"protein\") sequences from NCBI or get fasta directly from FTP site\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"#Mycelia.get_gff-Tuple{}","page":"Home","title":"Mycelia.get_gff","text":"get_gff(; db, accession, ftp) -> Union{Nothing, GFF3.Reader}\n\n\nGet dna (db = \"nuccore\") or protein (db = \"protein\") sequences from NCBI or get fasta directly from FTP site\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"#Mycelia.get_kmer_index-Tuple{Any, Any}","page":"Home","title":"Mycelia.get_kmer_index","text":"get_kmer_index(kmers, kmer) -> Any\n\n\nA short description of the function\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"#Mycelia.get_sequence-Tuple{}","page":"Home","title":"Mycelia.get_sequence","text":"get_sequence(; db, accession, ftp) -> Union{Nothing, FASTX.FASTA.Reader}\n\n\nGet dna (db = \"nuccore\") or protein (db = \"protein\") sequences from NCBI or get fasta directly from FTP site\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"#Mycelia.is_equivalent-Tuple{Any, Any}","page":"Home","title":"Mycelia.is_equivalent","text":"is_equivalent(a, b) -> Any\n\n\nA short description of the function\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"#Mycelia.observe-Tuple{R} where R<:Union{FASTX.FASTA.Record, FASTX.FASTQ.Record}","page":"Home","title":"Mycelia.observe","text":"observe(record::Union{FASTX.FASTA.Record, FASTX.FASTQ.Record}; error_rate) -> FASTX.FASTQ.Record\n\n\nA short description of the function\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"#Mycelia.observe-Union{Tuple{BioSequences.LongSequence{T}}, Tuple{T}} where T","page":"Home","title":"Mycelia.observe","text":"A short description of the function\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"#Mycelia.open_fastx-Tuple{String}","page":"Home","title":"Mycelia.open_fastx","text":"open_fastx(path::String) -> Any\n\n\nA short description of the function\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"#Mycelia.open_gff-Tuple{String}","page":"Home","title":"Mycelia.open_gff","text":"open_gff(path::String) -> GFF3.Reader\n\n\nA short description of the function\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"#Mycelia.oriented_unbranching_walk-Tuple{Any, Any, Any}","page":"Home","title":"Mycelia.oriented_unbranching_walk","text":"oriented_unbranching_walk(kmer_graph, vertex, orientation) -> Vector{Any}\n\n\nGet dna (db = \"nuccore\") or protein (db = \"protein\") sequences from NCBI or get fasta directly from FTP site\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"#Mycelia.plot_kmer_frequency_spectra-Tuple{Any}","page":"Home","title":"Mycelia.plot_kmer_frequency_spectra","text":"plot_kmer_frequency_spectra(counts; log_scale, kwargs...) -> Plots.Plot\n\n\nA short description of the function\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"#Mycelia.set_metadata!-Union{Tuple{E}, Tuple{Any, E, Any, Any}} where E<:LightGraphs.SimpleGraphs.SimpleEdge","page":"Home","title":"Mycelia.set_metadata!","text":"set_metadata!(kmer_graph, edge::LightGraphs.SimpleGraphs.SimpleEdge, key, value)\n\n\nA short description of the function\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"#Mycelia.set_metadata!-Union{Tuple{V}, Tuple{Any, V, Any, Any}} where V<:Integer","page":"Home","title":"Mycelia.set_metadata!","text":"set_metadata!(kmer_graph, vertex::Integer, key, value) -> Bool\n\n\nA short description of the function\n\njulia> 1 + 1\n2\n\n\n\n\n\n","category":"method"},{"location":"page2/#Page-2","page":"Page 2","title":"Page 2","text":"","category":"section"}]
}
